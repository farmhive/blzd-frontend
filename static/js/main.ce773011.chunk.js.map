{"version":3,"sources":["utils/getRpcUrl.ts","state/block/index.ts","contexts/RefreshContext.tsx","state/prices/index.ts","state/actions.ts","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","config/constants/types.ts","assets/logo.png","utils/addressHelpers.ts","config/constants/farms.ts","utils/multicall.ts","state/hooks.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","utils/web3.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","blockSlice","createSlice","name","initialState","blockNumber","reducers","setBlock","_","action","payload","actions","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","fetchPrices","createAsyncThunk","fetch","response","json","data","update_at","prices","Object","keys","reduce","accum","token","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","state","fulfilled","useRefresh","useContext","fastRefresh","slowRefresh","defaultTranslationState","translations","setTranslations","TranslationsContext","Container","styled","div","theme","mediaQueries","sm","Page","lg","cake","56","97","xblzd","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","QuoteToken","PoolCategory","getxBlzdAddress","addresses","chainId","getCakeAddress","getMasterChefAddress","getMulticallAddress","getLotteryAddress","getLotteryTicketAddress","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BUSD","quoteTokenAdresses","contracts","BNB","isTokenOnly","multicall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","itf","Interface","calldata","map","call","address","encodeFunctionData","params","methods","aggregate","returnData","res","i","decodeFunctionResult","ZERO","BigNumber","useFetchPublicData","dispatch","useDispatch","fetchFarmsPublicDataAsync","getWeb3NoAccount","getBlockNumber","useFarms","useSelector","useFarmFromPid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","usePriceBnbBusd","tokenPriceVsQuote","usePriceBlzdBusd","useTotalValue","bnbPrice","blzdPrice","lpTotalInQuoteToken","val","times","BLZD","plus","useFetchPriceList","useGetDocumentTitlePrice","blzdPriceUsd","blzdPriceUsdString","eq","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","title","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","filter","getStoredLang","then","r","translationApiResponse","catch","e","console","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","external","Menu","props","useWallet","account","connect","reset","login","logout","currentLang","langs","setLang","cakePriceUsd","links","priceLink","Wrapper","LogoIcon","PageLoader","style","height","src","logo","alt","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","fallback","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","current","configureStore","devTools","reducer","farmsReducer","pricesReducer","blockReducer","Providers","rpcUrl","getRpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getContract","contractOptions","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","CHAIN_ID","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","pow","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","blzdPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","fetchFarmUserAllowances","masterChefAdress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","farmAllowance"],"mappings":"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","file":"static/js/main.ce773011.chunk.js","sourcesContent":["import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Block } from '../types'\n\nconst initialState: Block = { blockNumber: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\n\nexport { setBlock } from './block'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","export default {\n  cake: {\n    56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    97: '0x1977ECbdE6832920c3554E238deDFfBC5ed996c9',\n  },\n  xblzd: {\n    56: '0x367CdDA266ADa588d380C7B970244434e4Dde790',\n    97: '',\n  },\n  masterChef: {\n    56: '0x2078F4A75c92A6918D13e3e2F14183443ebf55D3',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'BLZD' = 'BLZD',\n  'FARMHIVE' = 'FARMHIVE',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","export default __webpack_public_path__ + \"static/media/logo.fadd77f8.png\";","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 100\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getxBlzdAddress = () => {\n  return addresses.xblzd[chainId]\n}\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 1,\n    lpSymbol: 'BLZD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A',\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BLZD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x27A5a5c1fF96447F2a0c4baDcF26E7c65C040E3C',\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbCD62661A6b1DEd703585d3aF7d7649Ef4dcDB5c',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // caves\n  {\n    pid: 0,\n    isTokenOnly: true,\n    lpSymbol: 'BLZD',\n    lpAddresses: {\n      97: '',\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A', // BLZD-BUSD LP\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 8,\n    isTokenOnly: true,\n    lpSymbol: 'ALLOY',\n    lpAddresses: {\n      97: '',\n      56: '0x4bE10283b2183032BE35E6537C9737DF5a3F6C4A', // ALLOY-BNB LP\n    },\n    tokenSymbol: 'ALLOY',\n    tokenAddresses: {\n      97: '',\n      56: '0x5eF5994fA33FF4eB6c82d51ee1DC145c546065Bd',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 9,\n    isTokenOnly: true,\n    lpSymbol: 'BIFI',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD', // BIFI-BNB LP\n    },\n    tokenSymbol: 'BIFI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    isTokenOnly: true,\n    lpSymbol: 'vBSWAP',\n    lpAddresses: {\n      97: '',\n      56: '0x8DD39f0a49160cDa5ef1E2a2fA7396EEc7DA8267', // vBSWAP-BNB LP\n    },\n    tokenSymbol: 'vBSWAP',\n    tokenAddresses: {\n      97: '',\n      56: '0x4f0ed527e8A95ecAA132Af214dFd41F30b361600',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    isTokenOnly: true,\n    lpSymbol: 'WATCH',\n    lpAddresses: {\n      97: '',\n      56: '0xdC6C130299E53ACD2CC2D291fa10552CA2198a6b', // WATCH-BNB LP\n    },\n    tokenSymbol: 'WATCH',\n    tokenAddresses: {\n      97: '',\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { fetchFarmsPublicDataAsync, setBlock } from './actions'\nimport { State, Farm, Pool, Block, PriceState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 3 // BNB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBlzdBusd = (): BigNumber => {\n  const pid = 1 // BLZD-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const blzdPrice = usePriceBlzdBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.BLZD) {\n        val = blzdPrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n  let tokenSymbol = token.toLowerCase()\n\n  if (!prices) {\n    return null\n  }\n\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb'\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb'\n\n  return prices[tokenSymbol]\n}\n\n// Block\nexport const useBlock = (): Block => {\n  return useSelector((state: State) => state.block)\n}\n","import { useEffect } from 'react'\nimport { usePriceBlzdBusd } from 'state/hooks'\n\nconst useGetDocumentTitlePrice = () => {\n  const blzdPriceUsd = usePriceBlzdBusd()\n\n  const blzdPriceUsdString = blzdPriceUsd.eq(0)\n    ? ''\n    : ` - $${blzdPriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n\n  useEffect(() => {\n    document.title = `FARMHIVE.FINANCE${blzdPriceUsdString}`\n  }, [blzdPriceUsdString])\n}\nexport default useGetDocumentTitlePrice\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@blzd-dev/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Rubik', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\n// const fileId = 8\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\n// const stringTranslationsApi = new StringTranslations({\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\n// })\n\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n// }\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@blzd-dev/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@blzd-dev/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/add/BNB/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Caves',\n    icon: 'CaveIcon',\n    href: '/caves',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'HoneySwap',\n        href: 'https://info.honeyswap.org/token/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n    ],\n  },\n  {\n    label: 'Github',\n    icon: 'GithubIcon',\n    href: 'https://github.com/farmhive',\n    external: true,\n  },\n  {\n    label: 'Blog',\n    icon: 'MediumIcon',\n    href: 'https://farmhive.medium.com',\n    external: true,\n  },\n  {\n    label: 'Audit',\n    icon: 'AuditIcon',\n    external: true,\n    href: 'https://github.com/blzd-dev/blzd-frontend/blob/master/public/files/gemzAudit.pdf',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceBlzdBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@blzd-dev/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const blzdPriceUsd = usePriceBlzdBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={blzdPriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://info.honeyswap.org/token/0x71850b7e9ee3f13ab46d67167341e4bdc905eef9\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport Page from './layout/Page'\n\nimport logo from '../assets/logo.png'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LogoIcon = styled.div`\n  transition: transform 0.3s ease;\n  margin-bottom: 24px;\n  animation: pulse 1.25s ease-in-out infinite;\n  @keyframes pulse {\n    0% {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n    }\n    50% {\n      -webkit-transform: scale3d(1.05, 1.05, 1.05);\n      transform: scale3d(1.05, 1.05, 1.05);\n    }\n    to {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n    }\n  }\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon>\n        <img style={{ height: 86 }} src={logo} alt=\"logo\" />\n      </LogoIcon>\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@blzd-dev/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPriceList, useFetchPublicData } from 'state/hooks'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('connectorId')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/caves\">\n              <Farms tokenMode />\n            </Route>\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport pricesReducer from './prices'\nimport blockReducer from './block'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    prices: pricesReducer,\n    block: blockReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@blzd-dev/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport { getWeb3, getContract, httpProvider }\nexport default web3NoAccount\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, blzdPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'blzdPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        blzdPerBlock: new BigNumber(blzdPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingBlzd',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  // fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  // const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: '0',\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n"],"sourceRoot":""}