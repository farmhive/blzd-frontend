{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/erc20.ts","components/UnlockButton.tsx","hooks/useTokenBalance.ts","state/block/index.ts","hooks/useApprove.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","contexts/RefreshContext.tsx","state/prices/index.ts","config/index.ts","components/Tags.tsx","utils/addressHelpers.ts","hooks/useHarvest.ts","config/constants/index.ts","config/constants/types.ts","hooks/useWeb3.ts","hooks/useContract.ts","state/actions.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/callHelpers.ts","config/constants/contracts.ts","components/layout/Flex.tsx","hooks/useStake.ts","hooks/useUnstake.ts","utils/multicall.ts","state/hooks.ts","config/constants/tokens.ts","utils/formatBalance.ts","config/constants/pools.ts","config/constants/farms.ts","utils/web3.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","utils/apy.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/BLZDStaking.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","hooks/useExchangeXBlzd.ts","views/XBLZD/components/CardValue.tsx","views/XBLZD/components/BlzdWalletBalance.tsx","views/XBLZD/components/ExchangeBLZDCard.tsx","hooks/useAllowance.ts","views/XBLZD/XBLZD.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useRefresh.ts","components/layout/Container.tsx","components/layout/Page.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","blzdPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","farmAllowance","allowance","earnings","getContract","provider","Web3","eth","Contract","getAllowance","lpContract","masterChefContract","methods","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","UnlockButton","props","TranslateString","useI18n","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","ethereum","fastRefresh","res","blockSlice","blockNumber","setBlock","_","useApprove","useDispatch","useMasterchef","onApprove","useCallback","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useXBlzdApprove","useCake","getxBlzdAddress","ethers","constants","MaxUint256","send","from","StyledInputWrapper","styled","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","toLocaleString","size","RefreshContext","React","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","reduce","accum","token","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","getAddress","chainId","addresses","xblzd","cake","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","filter","isCommunity","PoolCategory","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","useWeb3","refEth","useRef","web3","setweb3","current","useContract","abi","contractOptions","setContract","useERC20","useXBlzd","xBlzd","useLottery","id","poolsConfig","pool","rawAbi","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useContext","exchangeXBlzd","amount","migrateToxBLZD","on","transactionHash","stake","deposit","sousStake","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","56","97","busd","FlexLayout","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","useUnstake","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","i","decodeFunctionResult","ZERO","useFetchPublicData","fetchPoolsPublicDataAsync","getWeb3NoAccount","getBlockNumber","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","usePriceBnbBusd","usePriceBlzdBusd","useTotalValue","bnbPrice","blzdPrice","val","BNB","BLZD","plus","useFetchPriceList","useGetApiPrice","useBlock","block","tokens","bnb","projectLink","blzd","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blk","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btc","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","getBalanceNumber","displayBalance","dividedBy","getFullDisplayBalance","toFixed","stakingToken","earningToken","CORE","tokenPerBlock","sortOrder","isFinished","lpSymbol","contracts","web3NoAccount","useGetDocumentTitlePrice","blzdPriceUsd","blzdPriceUsdString","eq","undefined","minimumFractionDigits","maximumFractionDigits","document","title","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","getStoredLang","then","r","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","label","icon","href","items","external","Menu","login","logout","currentLang","langs","setLang","cakePriceUsd","links","priceLink","Wrapper","Page","LogoIcon","PageLoader","style","height","src","alt","StyledLabel","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","currentTarget","handleSelectMax","ModalActions","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","CardTitle","Card","card","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","Flex","FlexFull","TokenLink","CardFooter","totalStaked","startBlock","endBlock","currentBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","Math","blocksRemaining","mb","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","rewardTokenPrice","apy","stakingTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getPoolApy","parseFloat","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","marginBottom","display","alignItems","flex","width","HarvestButton","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","scale","as","textSubtle","Hero","Farm","path","partition","finishedPools","openPools","textAlign","Divider","exact","orderBy","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","NftGlobalNotification","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","location","useExchangeXBlzd","xBlzdContract","onExchange","CardValue","prefix","useCountUp","countUp","update","updateValue","BlzdWalletBalance","cakeBalance","lineHeight","StyledFarmStakingCard","Block","RowBetween","CardImage","img","ExchangeBLZDCard","blzdBalance","setAllowance","fetchAllowance","refreshInterval","useXBlzdAllowance","isApproved","mt","isLessThanOrEqualTo","fullWidth","XBLZD","Home","lazy","Farms","NotFound","App","window","Global","tokenMode","component","BlockContext","BlockContextProvider","previousBlock","configureStore","devTools","reducer","farmsReducer","poolsReducer","pricesReducer","blockReducer","Providers","rpcUrl","parseInt","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingBlzd","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","Container","mediaQueries","sm","lg","Spacer","s","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child"],"mappings":"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","file":"static/js/main.088f1bf1.chunk.js","sourcesContent":["import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, blzdPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'blzdPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        blzdPerBlock: new BigNumber(blzdPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingBlzd',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  // fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  // const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: '0',\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@blzd-dev/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { createSlice } from '@reduxjs/toolkit'\nimport { Block } from '../types'\n\nconst initialState: Block = { blockNumber: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { getxBlzdAddress } from 'utils/addressHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n\n// Approve xBLZD\nexport const useXBlzdApprove = () => {\n  const { account } = useWallet()\n  const cakeContract = useCake()\n\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await cakeContract.methods\n        .approve(getxBlzdAddress(), ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, cakeContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@blzd-dev/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@blzd-dev/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getxBlzdAddress = () => {\n  return addresses.xblzd[chainId]\n}\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'BLZD' = 'BLZD',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getxBlzdAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport xBlzd from 'config/abi/xBlzd.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useXBlzd = () => {\n  const xBlzdAbi = (xBlzd as unknown) as AbiItem\n  return useContract(xBlzdAbi, getxBlzdAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { setBlock } from './block'\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const exchangeXBlzd = async (contract, amount, account) => {\n  return contract.methods\n    .migrateToxBLZD(amount)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","export default {\n  cake: {\n    56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    97: '0x1977ECbdE6832920c3554E238deDFfBC5ed996c9',\n  },\n  xblzd: {\n    56: '0x367CdDA266ADa588d380C7B970244434e4Dde790',\n    97: '',\n  },\n  masterChef: {\n    56: '0x2078F4A75c92A6918D13e3e2F14183443ebf55D3',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = []\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchPoolsPublicDataAsync, setBlock } from './actions'\nimport { State, Farm, Pool, Block, PriceState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n  \n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 3 // BNB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBlzdBusd = (): BigNumber => {\n  const pid = 1 // BLZD-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const blzdPrice = usePriceBlzdBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.BLZD) {\n        val = blzdPrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n  let tokenSymbol = token.toLowerCase()\n\n  if (!prices) {\n    return null\n  }\n\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb'\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb'\n\n  return prices[tokenSymbol]\n}\n\n// Block\nexport const useBlock = (): Block => {\n  return useSelector((state: State) => state.block)\n}\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  blzd: {\n    symbol: 'BLZD',\n    address: {\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n      97: '0x1977ECbdE6832920c3554E238deDFfBC5ed996c9',\n    },\n    decimals: 18,\n    projectLink: 'https://blizzard.money/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blk: {\n    symbol: 'BLK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btc: {\n    symbol: 'BTC',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0x7a1da9f49224ef98389b071b8a3294d1cc5e3e6a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n}\n\nexport default tokens\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import tokens from './tokens'\nimport { PoolCategory, PoolConfig } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 1,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x481055C4182B9A5e90d8E7EDe9f65b957dC0Ec22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.002480',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 2,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0x95b3389f41dbf513De5710A68220efF5a42dB068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00009920',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 3,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.btc,\n    contractAddress: {\n      97: '',\n      56: '0xa918f270F3F9bC0032aF233876BA1EE43d4946e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000049603',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 4,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.eth,\n    contractAddress: {\n      97: '',\n      56: '0x6F7CAFCD187d9cAbfa5A0139c7cC28c03BF7633b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000248',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 5,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x8f3b8638d5a766dfa685032f1eC681B1AfC0d047',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001165',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 6,\n    stakingToken: tokens.blzd,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xa7A925D63a83Ab37145F1f63D266d4e3D0dDA887',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.024305',\n    sortOrder: 999,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 1,\n    lpSymbol: 'BLZD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A',\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BLZD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x27A5a5c1fF96447F2a0c4baDcF26E7c65C040E3C',\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbCD62661A6b1DEd703585d3aF7d7649Ef4dcDB5c',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '',\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // caves\n  {\n    pid: 0,\n    isTokenOnly: true,\n    lpSymbol: 'BLZD',\n    lpAddresses: {\n      97: '',\n      56: '0xE9C53B5Ab0C9cDBd72A03151a628863C28c55A6A', // BLZD-BUSD LP\n    },\n    tokenSymbol: 'BLZD',\n    tokenAddresses: {\n      97: '',\n      56: '0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 8,\n    isTokenOnly: true,\n    lpSymbol: 'ALLOY',\n    lpAddresses: {\n      97: '',\n      56: '0x4bE10283b2183032BE35E6537C9737DF5a3F6C4A', // ALLOY-BNB LP\n    },\n    tokenSymbol: 'ALLOY',\n    tokenAddresses: {\n      97: '',\n      56: '0x5eF5994fA33FF4eB6c82d51ee1DC145c546065Bd',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 9,\n    isTokenOnly: true,\n    lpSymbol: 'BIFI',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD', // BIFI-BNB LP\n    },\n    tokenSymbol: 'BIFI',\n    tokenAddresses: {\n      97: '',\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    isTokenOnly: true,\n    lpSymbol: 'vBSWAP',\n    lpAddresses: {\n      97: '',\n      56: '0x8DD39f0a49160cDa5ef1E2a2fA7396EEc7DA8267', // vBSWAP-BNB LP\n    },\n    tokenSymbol: 'vBSWAP',\n    tokenAddresses: {\n      97: '',\n      56: '0x4f0ed527e8A95ecAA132Af214dFd41F30b361600',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    isTokenOnly: true,\n    lpSymbol: 'WATCH',\n    lpAddresses: {\n      97: '',\n      56: '0xdC6C130299E53ACD2CC2D291fa10552CA2198a6b', // WATCH-BNB LP\n    },\n    tokenSymbol: 'WATCH',\n    tokenAddresses: {\n      97: '',\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport { getWeb3, getContract, httpProvider }\nexport default web3NoAccount\n","import { useEffect } from 'react'\nimport { usePriceBlzdBusd } from 'state/hooks'\n\nconst useGetDocumentTitlePrice = () => {\n  const blzdPriceUsd = usePriceBlzdBusd()\n\n  const blzdPriceUsdString = blzdPriceUsd.eq(0)\n    ? ''\n    : ` - $${blzdPriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n\n  useEffect(() => {\n    document.title = `BLIZZARD.MONEY${blzdPriceUsdString}`\n  }, [blzdPriceUsdString])\n}\nexport default useGetDocumentTitlePrice\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@blzd-dev/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Rubik', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\n// const fileId = 8\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\n// const stringTranslationsApi = new StringTranslations({\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\n// })\n\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n// }\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@blzd-dev/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@blzd-dev/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'BLZD to xBLZD',\n    icon: 'TradeIcon',\n    href: '/xBLZD',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/add/BNB/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Caves',\n    icon: 'CaveIcon',\n    href: '/caves',\n  },\n  {\n    label: 'Blizzard',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'PancakeSwap',\n        href: 'https://pancakeswap.info/token/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0',\n        external: true,\n      },\n    ],\n  },\n  {\n    label: 'Github',\n    icon: 'GithubIcon',\n    href: 'https://github.com/blzd-dev',\n    external: true,\n  },\n  {\n    label: 'Blog',\n    icon: 'MediumIcon',\n    href: 'https://blizzardmoney.medium.com',\n    external: true,\n  },\n  {\n    label: 'Audit',\n    icon: 'AuditIcon',\n    external: true,\n    href: 'https://github.com/blzd-dev/blzd-frontend/blob/master/public/files/gemzAudit.pdf',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceBlzdBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@blzd-dev/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const blzdPriceUsd = usePriceBlzdBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={blzdPriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://pancakeswap.info/token/0x57067A6BD75c0E95a6A5f158455926e43E79BeB0\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LogoIcon = styled.div`\n  transition: transform 0.3s ease;\n  margin-bottom: 24px;\n  animation: pulse 1.25s ease-in-out infinite;\n  @keyframes pulse {\n    0% {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n    }\n    50% {\n      -webkit-transform: scale3d(1.05, 1.05, 1.05);\n      transform: scale3d(1.05, 1.05, 1.05);\n    }\n    to {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n    }\n  }\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon>\n        <img\n          style={{ height: 86 }}\n          src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/blzd/logo.png\"\n          alt=\"logo\"\n        />\n      </LogoIcon>\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@blzd-dev/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Flex } from '@blzd-dev/uikit'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { useBlock } from 'state/hooks'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  decimals: number\n  totalStaked: BigNumber\n  tokenName: string\n  tokenAddress: string\n  tokenDecimals: number\n  startBlock: number\n  endBlock: number\n  isFinished: boolean\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled(Flex)`\n  align-items: center;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  totalStaked,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n}) => {\n  const { blockNumber: currentBlock } = useBlock()\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  ❄️{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(409, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@blzd-dev/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApy } from 'utils/apy'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { Pool } from 'state/types'\nimport { useGetApiPrice } from 'state/hooks'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface HarvestProps {\n  pool: Pool\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    harvest,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { account } = useWallet()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  // APY\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\n  const apy = getPoolApy(\n    stakingTokenPrice,\n    rewardTokenPrice,\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\n    parseFloat(pool.tokenPerBlock),\n  )\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const isOldSyrup = stakingToken.symbol === tokens.syrup.symbol\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\n      // stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol} />,\n  )\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={onUnstake}\n      tokenName={stakingToken.symbol}\n      // stakingTokenDecimals={stakingToken.decimals}\n    />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image\n              src={`https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pools/${poolImage}`}\n              alt={earningToken.symbol}\n              width={64}\n              height={64}\n            />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\n                  {`Approve ${stakingToken.symbol}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  style={{ width: '80%' }}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingToken.symbol}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton style={{ width: '20%' }} disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"white\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance\n            fontSize=\"14px\"\n            isDisabled={isFinished}\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\n          />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={earningToken.projectLink}\n        decimals={stakingToken.decimals}\n        totalStaked={totalStaked}\n        startBlock={startBlock}\n        endBlock={endBlock}\n        isFinished={isFinished}\n        poolCategory={poolCategory}\n        tokenName={earningToken.symbol}\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\n        tokenDecimals={earningToken.decimals}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@blzd-dev/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\n// import Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const pools = usePools(account)\n  const { blockNumber } = useBlock()\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || blockNumber > pool.endBlock),\n    [blockNumber, pools],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'BLZD Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake BLZD to earn tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <div style={{ textAlign: 'right' }}>\n          <img\n            src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/blzdstakepage.png\"\n            alt=\"BLZD Pool icon\"\n          />\n        </div>\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            {/* <Coming /> */}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 396px;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { Nft } from './types'\n\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n    previewImage: 'swapsies-preview.png',\n    blurImage: 'swapsies-blur.png',\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n    previewImage: 'drizzle-preview.png',\n    blurImage: 'drizzle-blur.png',\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n    previewImage: 'blueberries-preview.png',\n    blurImage: 'blueberries-blur.png',\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n    previewImage: 'circular-preview.png',\n    blurImage: 'circular-blur.png',\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n    previewImage: 'sparkle-preview.png',\n    blurImage: 'sparkle-blur.png',\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import React, { useEffect, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Heading, Modal, useModal } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\n\ninterface NftYouWonModalProps {\n  onDismiss?: () => void\n}\n\nconst ModalContent = styled.div`\n  padding: 24px;\n  text-align: center;\n`\n\nconst Actions = styled.div`\n  text-align: center;\n`\n\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <ModalContent>\n        <img\n          src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/present.svg\"\n          alt=\"You won present\"\n          style={{ height: '64px', marginBottom: '24px' }}\n        />\n        <Heading size=\"lg\" color=\"secondary\">\n          {TranslateString(999, 'You won an NFT!')}\n        </Heading>\n      </ModalContent>\n      <Actions>\n        <Button as=\"a\" href=\"/nft\">\n          {TranslateString(999, 'Go to claim NFT')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\n/**\n * 1. Checks if nft supply available\n * 2. If supply is available check if the user can claim\n * 3. If the user can claim show a modal\n */\nconst NftGlobalNotification = () => {\n  const { account } = useWallet()\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\n  const showModal = useRef(() => onPresentBurnModal())\n\n  useEffect(() => {\n    const checkNftStatus = async () => {\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\n        rabbitmintingfarm,\n        [\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\n        ],\n      )\n\n      // TODO: Figure out why these values are coming back as an array\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n      const [canClaim]: [boolean] = canClaimArr\n      const [hasClaimed]: [boolean] = hasClaimedArr\n\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\n        showModal.current()\n      }\n    }\n\n    if (account && !document.location.href.includes('/nft')) {\n      checkNftStatus()\n    }\n  }, [account, showModal])\n\n  return <div />\n}\n\nexport default NftGlobalNotification\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { exchangeXBlzd } from 'utils/callHelpers'\nimport { useXBlzd } from './useContract'\n\nconst useExchangeXBlzd = () => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const xBlzdContract = useXBlzd()\n\n  const handleExchange = useCallback(\n    async (amount: string) => {\n      const txHash = await exchangeXBlzd(xBlzdContract, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, xBlzdContract],\n  )\n\n  return { onExchange: handleExchange }\n}\nexport default useExchangeXBlzd\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@blzd-dev/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport { Text } from '@blzd-dev/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from './CardValue'\n\nconst BlzdWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"36px\" />\n}\n\nexport default BlzdWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@blzd-dev/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport { useXBlzdApprove } from 'hooks/useApprove'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useXBlzdAllowance } from 'hooks/useAllowance'\nimport useExchangeXBlzd from 'hooks/useExchangeXBlzd'\nimport BlzdWalletBalance from './BlzdWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)``\n\nconst Block = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n`\n\nconst RowBetween = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Divider = styled.div`\n  height: 1px;\n  background: ${({ theme }) => theme.colors.textSubtle};\n  margin: 16px 0;\n`\n\nconst CardImage = styled.img`\n  margin-right: 8px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst ExchangeBLZDCard = () => {\n  const { account } = useWallet()\n  const blzdBalance = useTokenBalance(getCakeAddress())\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const allowance = useXBlzdAllowance()\n  const onApprove = useXBlzdApprove()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const { onExchange } = useExchangeXBlzd()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrExchangeButton = () => {\n    return isApproved ? (\n      <Button\n        style={{ width: '100%' }}\n        mt=\"8px\"\n        disabled={blzdBalance.isLessThanOrEqualTo(0)}\n        onClick={async () => {\n          await onExchange(blzdBalance.toString())\n        }}\n      >\n        Exchange\n      </Button>\n    ) : (\n      <Button style={{ width: '100%' }} mt=\"8px\" disabled={requestedApproval} onClick={handleApprove}>\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          Exchange BLZD to xBLZD\n        </Heading>\n        <RowBetween>\n          <CardImage\n            src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/blzd/2.png\"\n            alt=\"blzd logo\"\n            width={64}\n            height={64}\n          />\n          <Block>\n            <Label>BLZD in Wallet</Label>\n            <BlzdWalletBalance />\n          </Block>\n        </RowBetween>\n        <Divider />\n        <RowBetween>\n          <CardImage\n            src=\"https://raw.githubusercontent.com/blzd-dev/blzd-frontend/master/public/images/blzd/2.png\"\n            alt=\"blzd logo\"\n            width={64}\n            height={64}\n          />\n          <Block>\n            <Label>xBLZD</Label>\n            <BlzdWalletBalance />\n          </Block>\n        </RowBetween>\n        <Actions>{account ? renderApprovalOrExchangeButton() : <UnlockButton fullWidth />}</Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default ExchangeBLZDCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery, useXBlzd } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n// Retrieve xBlzd allowance\nexport const useXBlzdAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const xBlzdContract = useXBlzd()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, xBlzdContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, xBlzdContract, cakeContract])\n\n  return allowance\n}\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport ExchangeBLZDCard from './components/ExchangeBLZDCard'\n\nconst XBLZD: React.FC = () => {\n  return (\n    <Page>\n      <ExchangeBLZDCard />\n    </Page>\n  )\n}\n\nexport default XBLZD\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@blzd-dev/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPriceList, useFetchPublicData } from 'state/hooks'\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport Pools from './views/Pools'\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\nimport XBLZD from './views/XBLZD'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('connectorId')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchPriceList()\n  useGetDocumentTitlePrice()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/caves\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/xBLZD\">\n              <XBLZD />\n            </Route>\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <NftGlobalNotification />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport blockReducer from './block'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    block: blockReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@blzd-dev/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingBlzd('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n"],"sourceRoot":""}